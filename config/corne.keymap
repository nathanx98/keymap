/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        league {
            bindings = <&to 4>;
            key-positions = <9 21 33>;
        };
    };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &ht N1 Q  &ht N2 W  &ht N3 E          &ht N4 R          &ht N5 T               &ht N6 Y  &ht N7 U           &ht N8 I      &ht N9 O  &ht N0 P  &kp BACKSPACE
&kp LEFT_SHIFT  &kp A     &kp S     &kp D             &ht LEFT_BRACE F  &kp G                  &kp H     &ht RIGHT_BRACE J  &kp K         &kp L     &kp SEMI  &ht RIGHT_SHIFT SINGLE_QUOTE
&kp ENTER       &kp Z     &kp X     &kp C             &kp V             &kp B                  &kp N     &kp M              &kp COMMA     &kp DOT   &kp FSLH  &kp ENTER
                                    &kp LEFT_CONTROL  &kp LEFT_GUI      &lt 2 LA(BACKSPACE)    &mo 1     &kp SPACE          &kp LEFT_ALT
            >;
        };

        right_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&ht F1 GRAVE    &ht F2 EXCL  &ht F3 AT  &ht F4 HASH           &ht F5 DLLR     &ht F6 PRCNT    &ht F7 CARET    &ht F8 AMPS      &ht F9 KP_MULTIPLY     &ht F10 MINUS  &ht F11 EQUAL  &kp F12
&kp LEFT_SHIFT  &trans       &kp LBKT   &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &trans          &kp UNDERSCORE  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RBKT       &trans         &kp BACKSLASH
&trans          &trans       &trans     &trans                &trans          &trans          &trans          &trans           &trans                 &trans         &trans         &trans
                                        &trans                &trans          &to 3           &trans          &trans           &trans
            >;
        };

        left_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &mt LG(LA(UP_ARROW)) LS(LG(LEFT_BRACKET))  &mt LG(LA(DOWN)) LS(LG(RIGHT_BRACKET))  &kp LA(LEFT)       &kp UP_ARROW  &kp LA(RIGHT)          &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans      &kp LG(LEFT_BRACKET)                       &kp LG(RIGHT_BRACKET)                   &ht LG(LEFT) LEFT  &kp DOWN      &ht LG(RIGHT) RIGHT    &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans      &trans                                     &trans                                  &trans             &trans        &trans                 &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                                                                                               &trans             &trans        &trans                 &to 3   &trans  &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &kp PAGE_UP    &trans  &kp HOME  &trans        &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &kp PAGE_DOWN  &trans  &kp END   &bt BT_CLR    &bt BT_SEL 0
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans         &trans  &trans    &bt BT_SEL 1  &bt BT_SEL 2
                         &trans   &trans   &to 0     &trans  &trans         &trans
            >;
        };

        league_layer {
            bindings = <
&kp TAB           &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp Q   &kp W   &kp E   &kp R   &kp T        &trans  &trans  &trans  &trans  &trans  &trans
&trans            &kp A   &kp C   &kp D   &kp F   &kp V        &trans  &trans  &trans  &trans  &trans  &to 0
                                  &trans  &kp A   &kp SPACE    &mo 0   &trans  &trans
            >;
        };
    };
};
