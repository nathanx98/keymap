/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        league {
            bindings = <&to 4>;
            key-positions = <9 21 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E             &kp R         &kp T              &kp Y      &kp U      &kp I         &kp O    &kp P     &mt LA(BACKSPACE) BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D             &kp F         &kp G              &kp H      &kp J      &kp K         &kp L    &kp SEMI  &mt RIGHT_SHIFT SINGLE_QUOTE
&kp ENTER       &kp Z  &kp X  &kp C             &kp V         &kp B              &kp N      &kp M      &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                              &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 2 BACKSPACE    &lt 1 RET  &kp SPACE  &kp LEFT_ALT
            >;
        };

        right_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE       &kp EXCL  &kp AT  &kp HASH         &kp DLLR       &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR          &kp RPAR           &trans
&kp LEFT_SHIFT  &trans    &trans  &kp PLUS         &kp KP_MINUS   &trans       &trans     &kp EQUAL  &kp UNDER        &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp BACKSLASH
&trans          &trans    &trans  &kp KP_ASTERISK  &kp KP_DIVIDE  &trans       &trans     &trans     &trans           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
                                  &trans           &trans         &to 3        &trans     &trans     &trans
            >;
        };

        left_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LS(LG(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp N7  &kp N8  &kp N9    &trans  &kp HOME           &kp UP    &kp END              &trans  &kp BSPC
&trans  &kp LG(LEFT_BRACKET)      &kp LG(RIGHT_BRACKET)      &kp N4  &kp N5  &kp N6    &trans  &mt LA(LEFT) LEFT  &kp DOWN  &mt LA(RIGHT) RIGHT  &trans  &trans
&trans  &trans                    &trans                     &kp N1  &kp N2  &kp N3    &trans  &trans             &trans    &trans               &trans  &trans
                                                             &kp N0  &trans  &trans    &to 3   &trans             &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &kp PAGE_UP    &trans  &kp HOME  &trans        &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &kp PAGE_DOWN  &trans  &kp END   &bt BT_CLR    &bt BT_SEL 0
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans         &trans  &trans    &bt BT_SEL 1  &bt BT_SEL 2
                         &trans   &trans   &to 0     &trans  &trans         &trans
            >;
        };

        league_layer {
            bindings = <
&kp TAB           &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp Q   &kp W   &kp E   &kp R   &kp T        &trans  &trans  &trans  &trans  &trans  &trans
&trans            &kp A   &kp C   &kp D   &kp F   &kp V        &trans  &trans  &trans  &trans  &trans  &to 0
                                  &trans  &kp A   &kp SPACE    &mo 0   &trans  &trans
            >;
        };
    };
};
